{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Connection to PostgreSQL database successful!\n",
      "Clinical activity file read successfully.\n",
      "         Date Patient ID/Name Admission Time Discharge Time  \\\n",
      "0  2024-02-18           PT530       20:35:36       11:22:01   \n",
      "1  2024-04-03           PT470       15:40:37       14:52:04   \n",
      "2  2024-05-16           PT452       02:27:47       05:37:35   \n",
      "3  2024-01-26           PT683       18:50:47       14:43:28   \n",
      "4  2024-03-02           PT489       00:21:54       07:10:53   \n",
      "\n",
      "                   Diagnosis                Attending_Officer is_admitted  \n",
      "0  ['Fatigue', 'Chest Pain']    ('Nr Johnson', 'Dr. Mendoza')          No  \n",
      "1                  ['Cough']     ('Nr Wheeler', 'Dr. Harris')         Yes  \n",
      "2                  ['Fever']      ('Nr Osborn', 'Dr. Taylor')          No  \n",
      "3                   ['Pain']    ('Nr Middleton', 'Dr. Lucas')          No  \n",
      "4                ['Fatigue']  ('Nr Rodriguez', 'Dr. Barrett')         Yes  \n",
      "\n",
      "financial data CSV file read successfully.\n",
      "             Department Name  Number of Employees    Revenue  Expenses  \\\n",
      "0  Emergency Department (ED)                   20   86242.27  15655.05   \n",
      "1          Internal Medicine                   39   81639.24  91795.48   \n",
      "2        Laboratory Services                   38  166659.13  26012.38   \n",
      "3  Intensive Care Unit (ICU)                   22  121954.93  79541.19   \n",
      "4                   Pharmacy                   24  151628.16  23187.04   \n",
      "\n",
      "   Profitability (%)                                 Budget Allocations  \n",
      "0              81.85  {'Salaries': 43359.17681500854, 'Equipment': 8...  \n",
      "1             -12.44  {'Salaries': 9014.100834201352, 'Equipment': 8...  \n",
      "2              84.39  {'Salaries': 42483.28801799624, 'Equipment': 4...  \n",
      "3              34.78  {'Salaries': 20295.504943576936, 'Equipment': ...  \n",
      "4              84.71  {'Salaries': 27114.96739177607, 'Equipment': 2...  \n",
      "\n",
      "hospital data file read successfully.\n",
      "          Day  Number of Admitted Patients  Number of Discharged Patients  \\\n",
      "0  2024-04-17                            4                              2   \n",
      "1  2024-04-28                            7                              0   \n",
      "2  2024-03-29                           16                             13   \n",
      "3  2024-04-03                           14                              4   \n",
      "4  2024-03-27                           19                              9   \n",
      "\n",
      "   Number of Occupied Beds                                    Discharge Times  \n",
      "0                       29                           ['07:50:18', '18:51:13']  \n",
      "1                       11                                                 []  \n",
      "2                        7  ['08:01:41', '05:57:08', '17:48:48', '11:04:13...  \n",
      "3                       29   ['19:19:51', '06:53:13', '04:08:09', '00:49:55']  \n",
      "4                        4  ['19:37:23', '13:15:28', '13:26:03', '16:21:45...  \n",
      "\n",
      "hospital_hr_metrics file read successfully.\n",
      "      Month  Total Employees  New Hires  Terminations  \\\n",
      "0   January              830         41            23   \n",
      "1  February              861         23            25   \n",
      "2     March              934         49            12   \n",
      "3     April              803         46            14   \n",
      "4       May              699         23            16   \n",
      "\n",
      "   Employee Turnover Rate (%)  Average Tenure (Years)  Overtime Hours  \\\n",
      "0                    2.771084                2.176497            1417   \n",
      "1                    2.903600                2.275014            1239   \n",
      "2                    1.284797                2.317312            1806   \n",
      "3                    1.743462                2.219714            1149   \n",
      "4                    2.288984                1.093486            1999   \n",
      "\n",
      "   Training Hours  Employee Satisfaction Score  \n",
      "0             739                           86  \n",
      "1             901                           82  \n",
      "2             616                           88  \n",
      "3             961                           88  \n",
      "4             687                           73  \n",
      "\n",
      "Overall_performance file read successfully.\n",
      "      Month  Patients Treated  Surgeries Performed  Revenue Generated ($)  \\\n",
      "0   January              1240                  141                  83668   \n",
      "1  February              1810                   85                 142645   \n",
      "2     March              1490                   58                  50509   \n",
      "3     April              1925                  136                 149393   \n",
      "4       May              1212                  102                  75972   \n",
      "\n",
      "   Patient Satisfaction (%)  \n",
      "0                        93  \n",
      "1                        86  \n",
      "2                        95  \n",
      "3                        84  \n",
      "4                        83  \n",
      "Error inserting data into table 'Clinical activity': Execution failed on sql '\n",
      "        SELECT\n",
      "            name\n",
      "        FROM\n",
      "            sqlite_master\n",
      "        WHERE\n",
      "            type IN ('table', 'view')\n",
      "            AND name=?;\n",
      "        ': syntax error at or near \";\"\n",
      "LINE 8:             AND name=?;\n",
      "                              ^\n",
      "\n",
      "Error inserting data into table 'Financial data': Execution failed on sql '\n",
      "        SELECT\n",
      "            name\n",
      "        FROM\n",
      "            sqlite_master\n",
      "        WHERE\n",
      "            type IN ('table', 'view')\n",
      "            AND name=?;\n",
      "        ': syntax error at or near \";\"\n",
      "LINE 8:             AND name=?;\n",
      "                              ^\n",
      "\n",
      "Error inserting data into table 'Hospital data': Execution failed on sql '\n",
      "        SELECT\n",
      "            name\n",
      "        FROM\n",
      "            sqlite_master\n",
      "        WHERE\n",
      "            type IN ('table', 'view')\n",
      "            AND name=?;\n",
      "        ': syntax error at or near \";\"\n",
      "LINE 8:             AND name=?;\n",
      "                              ^\n",
      "\n",
      "Error inserting data into table 'Hospital Hr Metrics': Execution failed on sql '\n",
      "        SELECT\n",
      "            name\n",
      "        FROM\n",
      "            sqlite_master\n",
      "        WHERE\n",
      "            type IN ('table', 'view')\n",
      "            AND name=?;\n",
      "        ': syntax error at or near \";\"\n",
      "LINE 8:             AND name=?;\n",
      "                              ^\n",
      "\n",
      "Error inserting data into table 'Overall Performance': Execution failed on sql '\n",
      "        SELECT\n",
      "            name\n",
      "        FROM\n",
      "            sqlite_master\n",
      "        WHERE\n",
      "            type IN ('table', 'view')\n",
      "            AND name=?;\n",
      "        ': syntax error at or near \";\"\n",
      "LINE 8:             AND name=?;\n",
      "                              ^\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/mt/qcd1_36x6_1gqqs3v0hjybsw0000gn/T/ipykernel_59413/578863399.py:14: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n",
      "  data.to_sql(table_name, conn, if_exists='replace', index=False)\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import psycopg2\n",
    "\n",
    "def read_csv(file_path):\n",
    "    try:\n",
    "        df = pd.read_csv(file_path)\n",
    "        return df\n",
    "    except Exception as e:\n",
    "        print(f\"Error reading CSV file: {e}\")\n",
    "\n",
    "def insert_into_postgresql(data, table_name, conn):\n",
    "    try:\n",
    "        data.to_sql(table_name, conn, if_exists='replace', index=False)\n",
    "        print(f\"Data inserted into table '{table_name}' successfully.\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error inserting data into table '{table_name}': {e}\")\n",
    "\n",
    "def handle_schema_evolution(data, current_schema_version=1):\n",
    "    if current_schema_version == 1:\n",
    "        data['new_field'] = 'default_value'\n",
    "    return data\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    dbname = 'postgres'  \n",
    "    user = 'postgres'    \n",
    "    password = 'password'  \n",
    "    host = 'localhost'   \n",
    "    port = '5432'        \n",
    "\n",
    "# Establish connection\n",
    "try:\n",
    "    conn = psycopg2.connect(\n",
    "        dbname=dbname,\n",
    "        user=user,\n",
    "        password=password,\n",
    "        host=host,\n",
    "        port=port\n",
    "    )\n",
    "    print(\"Connection to PostgreSQL database successful!\")\n",
    "except psycopg2.Error as e:\n",
    "    print(f\"Error connecting to PostgreSQL database: {e}\")\n",
    "\n",
    "Hospitaldb_path = \"/Users/mac/git_project/Data-Engineering-Capstone-Project/Data\"\n",
    "clinical_activity_csv_file_path = os.path.join(Hospitaldb_path, \"clinical_activity_data.csv\")\n",
    "financial_data_csv_file_path = os.path.join(Hospitaldb_path, \"financial_data.csv\")\n",
    "hospital_data_csv_file_path = os.path.join(Hospitaldb_path, \"hospital_data.csv\")\n",
    "hospital_hr_metrics_csv_file_path = os.path.join(Hospitaldb_path, \"hospital_hr_metrics.csv\")\n",
    "Overall_performance_csv_file_path = os.path.join(Hospitaldb_path, \"Overall_performance.csv\")\n",
    "\n",
    "clinical_activity_df = read_csv(clinical_activity_csv_file_path)\n",
    "financial_data_df = read_csv(financial_data_csv_file_path)\n",
    "hospital_data_df = read_csv(hospital_data_csv_file_path)\n",
    "hospital_hr_metrics_df = read_csv(hospital_hr_metrics_csv_file_path)\n",
    "Overall_performance_df = read_csv(Overall_performance_csv_file_path)\n",
    "\n",
    "# Assuming handle_schema_evolution() function is defined as in your original script\n",
    "\n",
    "if clinical_activity_df is not None:\n",
    "    print(\"Clinical activity file read successfully.\")\n",
    "    print(clinical_activity_df.head())\n",
    "    clinical_activity_df = handle_schema_evolution(clinical_activity_df)\n",
    "\n",
    "if financial_data_df is not None:\n",
    "    print(\"\\nfinancial data CSV file read successfully.\")\n",
    "    print(financial_data_df.head())\n",
    "    financial_data_df = handle_schema_evolution(financial_data_df)\n",
    "\n",
    "if hospital_data_df is not None:\n",
    "    print(\"\\nhospital data file read successfully.\")\n",
    "    print(hospital_data_df.head())\n",
    "    hospital_data_df = handle_schema_evolution(hospital_data_df)\n",
    "\n",
    "if hospital_hr_metrics_df is not None:\n",
    "    print(\"\\nhospital_hr_metrics file read successfully.\")\n",
    "    print(hospital_hr_metrics_df.head())\n",
    "    hospital_hr_metrics_df = handle_schema_evolution(hospital_hr_metrics_df)\n",
    "\n",
    "if Overall_performance_df is not None:\n",
    "    print(\"\\nOverall_performance file read successfully.\")\n",
    "    print(Overall_performance_df.head())\n",
    "    Overall_performance_df = handle_schema_evolution(Overall_performance_df)\n",
    "\n",
    "insert_into_postgresql(clinical_activity_df, \"Clinical activity\", conn)\n",
    "insert_into_postgresql(financial_data_df, \"Financial data\", conn)\n",
    "insert_into_postgresql(hospital_data_df, \"Hospital data\", conn)\n",
    "insert_into_postgresql(hospital_hr_metrics_df, \"Hospital Hr Metrics\", conn)\n",
    "insert_into_postgresql(Overall_performance_df, \"Overall Performance\", conn)\n",
    "\n",
    "conn.close()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
